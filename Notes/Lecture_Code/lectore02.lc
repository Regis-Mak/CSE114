-- Welcome to Elsa

-- Definitions
let identity = \x -> x

--Church Numerals
-- Repeated applications
-- of the first argument to the second one
let zero = \f x -> x
let one = \f x -> f x
let two = \f x -> f (f x)
let three = \f x -> f (f (f x))

let rainbow = \x -> three

eval example_1 :
    (\x -> x) (\y -> y)
    =b> \y -> y

eval example_2 :
    identity (\y -> y)
    =d> (\x -> x) (\y -> y)
    =b> /y -> y

eval example_3 :
    ((\x -> (\y -> x)) five) six
    =b> (\y -> five) six
    =b> five

eval example_4 :
    identity five
    =d> (\x -> x) five
    =b> five

eval example_5 :
    (\f -> f (\x -> x)) (\y -> y)
    =b> (\y -> y) (\x -> x)
    =b> (\x -> x)

--Take Beta steps on this expression until 
--there are no more reduxes
eval example_6 :
    (\f -> f (\x -> x)) (\y -> y)
    =*> (\x -> x)

eval example_7:
    rainbow identity
    =d> (\x -> three) identity
    =b> three